name: Release Version

on: 
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
      debug:
        type: boolean
        description: Debug Mode
      bucket:
        type: choice
        required: true
        description: Choose bucket target
        options:
        - TOKOPEDIA_AWS
        - TOKOPEDIA_GCP
        - GOJEK_GCP

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release-version:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v2
      # Will adding conditional debug = 'true'
      - name: (Debug) Print User Input
        run: |
          echo "Log level: ${{ github.event.inputs.logLevel }}"
          echo "Debug Mode: ${{ github.event.inputs.debug }}"
          echo "Bucket: ${{ github.event.inputs.bucket }}"
          echo "Selected Bucket Secret ${{ secrets[github.event.inputs.bucket] }}"
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - name: Install Dependencies
        run: yarn install
      - name: Generating Release Version
        uses: cycjimmy/semantic-release-action@v2
        id: semantic
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          semantic_version: 16
          extra_plugins: |
            @semantic-release/changelog
            @semantic-release/git
          branches: |
            ['master']
      # Will adding conditional debug = 'true'
      - name: (Debug) Print New Release Version
        if: steps.semantic.outputs.new_release_published == 'true'
        run: |
          echo "New release version v${{ steps.semantic.outputs.new_release_version }}"
      - name: Log into Registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker Metadata
        id: meta
        uses: docker/metadata-action@v3
        if: steps.semantic.outputs.new_release_published == 'true'
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      - name: Build and Publish To GitHub Docker Image Registry
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ steps.semantic.outputs.new_release_published == 'true' }}
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:v${{ steps.semantic.outputs.new_release_version }}
          labels: ${{ steps.meta.outputs.labels }}